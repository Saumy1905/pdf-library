'_layouts/pdf-viewer.html' file content is given as follows in double quotes, "---
layout: default
---

{% assign subject_id = page.pdf_subject %}
{% assign subject_data = site.data.subjects | where: "id", subject_id | first %}
{% assign category_data = site.data.categories | where: "id", subject_data.category | first %}
{% assign pdf_data = subject_data.pdfs | where: "file", page.pdf_file | first %}

<div class="container">
  <div class="breadcrumbs">
    <a href="{{ '/' | relative_url }}">Home</a> &raquo;
    <a href="{{ '/categories/' | relative_url }}">Categories</a> &raquo;
    <a href="{{ '/categories/' | append: category_data.id | relative_url }}">{{ category_data.name }}</a> &raquo;
    <a href="{{ '/subjects/' | append: subject_id | relative_url }}">{{ subject_data.name }}</a> &raquo;
    <span>{{ pdf_data.title }}</span>
  </div>
  
  <div class="pdf-viewer-header">
    <h1 class="pdf-title">{{ pdf_data.title }}</h1>
    <div class="pdf-meta">
      <span class="pdf-subject">Subject: <a href="{{ '/subjects/' | append: subject_id | relative_url }}">{{ subject_data.name }}</a></span>
      <span class="pdf-category">Category: <a href="{{ '/categories/' | append: category_data.id | relative_url }}">{{ category_data.name }}</a></span>
      <span class="pdf-pages">{{ pdf_data.pages }} pages</span>
      <span class="pdf-date">Added: {{ pdf_data.date | date: "%B %d, %Y" }}</span>
    </div>
    <div class="pdf-actions-bar">
      <a href="{{ '/assets/pdfs/' | append: pdf_data.file | relative_url }}" class="btn-download" download>
        <i class="fas fa-download"></i> Download PDF
      </a>
      <button id="fullscreen-btn" class="btn-fullscreen">
        <i class="fas fa-expand"></i> Fullscreen
      </button>
      <button id="print-btn" class="btn-print">
        <i class="fas fa-print"></i> Print
      </button>
    </div>
  </div>
  
  <div class="pdf-viewer-container" id="pdf-viewer">
    <iframe 
      src="{{ '/assets/pdfs/' | append: pdf_data.file | relative_url }}" 
      class="pdf-iframe" 
      id="pdf-iframe"
      frameborder="0"
      width="100%"
      height="800px"
      allowfullscreen
    ></iframe>
  </div>
  
  <div class="pdf-navigation">
    {% assign pdf_files = subject_data.pdfs %}
    {% assign current_pdf = page.pdf_file %}
    {% assign current_index = -1 %}
    
    {% for pdf in pdf_files %}
      {% if pdf.file == current_pdf %}
        {% assign current_index = forloop.index0 %}
        {% break %}
      {% endif %}
    {% endfor %}
    
    {% if current_index > 0 %}
      {% assign prev_index = current_index | minus: 1 %}
      {% assign prev_pdf = pdf_files[prev_index] %}
      <a href="{{ '/pdf-viewer/' | append: subject_id | append: '/' | append: prev_pdf.file | replace: '.pdf', '' | relative_url }}" class="nav-prev">
        <i class="fas fa-arrow-left"></i> {{ prev_pdf.title }}
      </a>
    {% endif %}
    
    {% assign last_index = pdf_files.size | minus: 1 %}
    {% if current_index < last_index %}
      {% assign next_index = current_index | plus: 1 %}
      {% assign next_pdf = pdf_files[next_index] %}
      <a href="{{ '/pdf-viewer/' | append: subject_id | append: '/' | append: next_pdf.file | replace: '.pdf', '' | relative_url }}" class="nav-next">
        {{ next_pdf.title }} <i class="fas fa-arrow-right"></i>
      </a>
    {% endif %}
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const fullscreenBtn = document.getElementById('fullscreen-btn');
  const printBtn = document.getElementById('print-btn');
  const pdfIframe = document.getElementById('pdf-iframe');
  
  if (fullscreenBtn) {
    fullscreenBtn.addEventListener('click', function() {
      if (pdfIframe.requestFullscreen) {
        pdfIframe.requestFullscreen();
      } else if (pdfIframe.webkitRequestFullscreen) {
        pdfIframe.webkitRequestFullscreen();
      } else if (pdfIframe.mozRequestFullScreen) {
        pdfIframe.mozRequestFullScreen();
      }
    });
  }
  
  if (printBtn) {
    printBtn.addEventListener('click', function() {
      window.print();
    });
  }
});
</script>", '_includes/category-card.html' file content is given as follows in double quotes, "<div class="category-card">
  <div class="category-icon">
    <i class="fas fa-{{ include.icon }}"></i>
  </div>
  <div class="category-content">
    <h2 class="category-title">{{ include.name }}</h2>
    <p class="category-description">{{ include.description }}</p>
    <a href="{{ '/categories/' | append: include.id | relative_url }}" class="btn-view">View Category</a>
  </div>
</div>", '_includes/subject-card.html' file content is given as follows in double quotes, "<div class="subject-card">
  <h2 class="subject-title">{{ include.name }}</h2>
  <p class="subject-description">{{ include.description }}</p>
  <p class="subject-meta">{{ include.pdf_count }} PDF{% if include.pdf_count != 1 %}s{% endif %}</p>
  <a href="{{ '/subjects/' | append: include.id | relative_url }}" class="btn-view">View Subject</a>
</div>", 'assets/js/main.js' file content is given as follows in double quotes, "document.addEventListener('DOMContentLoaded', function() {
  // Toggle mobile menu
  const menuToggle = document.querySelector('.menu-toggle');
  const siteNav = document.querySelector('.site-nav');
  
  if (menuToggle && siteNav) {
    menuToggle.addEventListener('click', function() {
      siteNav.classList.toggle('active');
    });
  }
  
  // Toggle search bar
  const searchToggle = document.querySelector('.search-toggle');
  const searchContainer = document.querySelector('.search-container');
  
  if (searchToggle && searchContainer) {
    searchToggle.addEventListener('click', function() {
      searchContainer.classList.toggle('active');
      if (searchContainer.classList.contains('active')) {
        document.querySelector('#search-input').focus();
      }
    });
  }
  
  // Toggle dark mode
  const themeToggle = document.querySelector('.theme-toggle');
  const body = document.body;
  
  // Check for saved theme preference
  const currentTheme = localStorage.getItem('theme');
  if (currentTheme === 'dark') {
    body.classList.add('dark-theme');
    if (themeToggle) {
      themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
    }
  }
  
  if (themeToggle) {
    themeToggle.addEventListener('click', function() {
      body.classList.toggle('dark-theme');
      
      let theme = 'light';
      if (body.classList.contains('dark-theme')) {
        theme = 'dark';
        themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
      } else {
        themeToggle.innerHTML = '<i class="fas fa-moon"></i>';
      }
      
      localStorage.setItem('theme', theme);
    });
  }
  
  // Subject filtering
  const filterButtons = document.querySelectorAll('.filter-btn');
  const subjectCards = document.querySelectorAll('.subject-card');
  
  if (filterButtons.length > 0 && subjectCards.length > 0) {
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Remove active class from all buttons
        filterButtons.forEach(btn => btn.classList.remove('active'));
        
        // Add active class to clicked button
        this.classList.add('active');
        
        const filter = this.getAttribute('data-filter');
        
        // Filter subjects
        subjectCards.forEach(card => {
          if (filter === 'all') {
            card.style.display = 'block';
          } else {
            if (card.getAttribute('data-category') === filter) {
              card.style.display = 'block';
            } else {
              card.style.display = 'none';
            }
          }
        });
      });
    });
  }
  
  // PDF viewer fullscreen button
  const fullscreenBtn = document.getElementById('fullscreen-btn');
  const pdfViewer = document.getElementById('pdf-viewer');
  const pdfIframe = document.getElementById('pdf-iframe');
  
  if (fullscreenBtn && pdfViewer) {
    fullscreenBtn.addEventListener('click', function() {
      if (pdfViewer.requestFullscreen) {
        pdfViewer.requestFullscreen();
      } else if (pdfViewer.mozRequestFullScreen) { /* Firefox */
        pdfViewer.mozRequestFullScreen();
      } else if (pdfViewer.webkitRequestFullscreen) { /* Chrome, Safari & Opera */
        pdfViewer.webkitRequestFullscreen();
      } else if (pdfViewer.msRequestFullscreen) { /* IE/Edge */
        pdfViewer.msRequestFullscreen();
      }
    });
  }
  
  // Print PDF button
  const printBtn = document.getElementById('print-btn');
  
  if (printBtn && pdfIframe) {
    printBtn.addEventListener('click', function() {
      pdfIframe.contentWindow.focus();
      pdfIframe.contentWindow.print();
    });
  }
  
  // Search functionality
  const urlParams = new URLSearchParams(window.location.search);
  const searchQuery = urlParams.get('q');
  const searchQueryElement = document.getElementById('search-query');
  const searchInput = document.getElementById('search-input');
  const searchResults = document.getElementById('search-results');
  
  if (searchQuery && searchQueryElement) {
    searchQueryElement.textContent = searchQuery;
    
    if (searchInput) {
      searchInput.value = searchQuery;
    }
    
    if (searchResults) {
      // In a real application, you would query your site content
      // For this demo, we'll just create some dummy results
      setTimeout(() => {
        let resultsHTML = '';
        
        // Dummy data - in a real app you would search through your data
        const allSubjects = [
          { id: 'data-structures', name: 'Data Structures', category: 'computer-science', description: 'Study of organizing and storing data' },
          { id: 'algorithms', name: 'Algorithms', category: 'computer-science', description: 'Study of computational problem-solving methods' },
          { id: 'mechanics', name: 'Mechanics', category: 'physics', description: 'Study of motion and forces' },
          { id: 'circuits', name: 'Circuit Theory', category: 'engineering', description: 'Study of electrical circuits' },
          { id: 'anatomy', name: 'Anatomy', category: 'medical', description: 'Study of body structure' }
        ];
        
        const matchingSubjects = allSubjects.filter(subject => 
          subject.name.toLowerCase().includes(searchQuery.toLowerCase()) || 
          subject.description.toLowerCase().includes(searchQuery.toLowerCase())
        );
        
        if (matchingSubjects.length > 0) {
          matchingSubjects.forEach(subject => {
            resultsHTML += `
              <div class="search-result">
                <h3><a href="${site.baseurl}/subjects/${subject.id}/">${subject.name}</a></h3>
                <p>${subject.description}</p>
              </div>
            `;
          });
        } else {
          resultsHTML = '<p>No results found. Try a different search term.</p>';
        }
        
        searchResults.innerHTML = resultsHTML;
      }, 1000);
    }
  }
});", 'assets/css/main.css' file content is given as follows in double quotes, ":root {
  --primary-color: #4a6cf7;
  --primary-dark: #3a56c5;
  --secondary-color: #6c757d;
  --background-color: #ffffff;
  --text-color: #333333;
  --light-gray: #f8f9fa;
  --border-color: #e9ecef;
  --success-color: #28a745;
  --warning-color: #ffc107;
  --danger-color: #dc3545;
  --info-color: #17a2b8;
}

/* Dark theme colors */
.dark-theme {
  --primary-color: #5d7bf9;
  --primary-dark: #4a6cf7;
  --secondary-color: #a0a0a0;
  --background-color: #121212;
  --text-color: #f0f0f0;
  --light-gray: #1e1e1e;
  --border-color: #2d2d2d;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
  background-color: var(--background-color);
  transition: background-color 0.3s, color 0.3s;
}

a {
  color: var(--primary-color);
  text-decoration: none;
  transition: color 0.3s;
}

a:hover {
  color: var(--primary-dark);
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

/* Typography */
h1, h2, h3, h4, h5, h6 {
  margin-bottom: 1rem;
  line-height: 1.3;
}

.page-title {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.page-description {
  font-size: 1.2rem;
  color: var(--secondary-color);
  margin-bottom: 2rem;
}

.section-title {
  font-size: 2rem;
  margin-bottom: 2rem;
  text-align: center;
}

/* Header */
.site-header {
  background-color: var(--background-color);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 0;
  z-index: 100;
  transition: background-color 0.3s;
}

.site-header .container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 20px;
}

.header-left, .header-right {
  display: flex;
  align-items: center;
}

.site-title {
  font-size: 1.5rem;
  margin: 0;
}

.site-title a {
  color: var(--text-color);
}

.site-nav {
  display: flex;
  gap: 1.5rem;
}

.site-nav a {
  color: var(--text-color);
  font-weight: 500;
}

.site-nav a:hover {
  color: var(--primary-color);
}

.header-right {
  display: flex;
  gap: 1rem;
}

.search-toggle,
.theme-toggle,
.menu-toggle {
  background: none;
  border: none;
  color: var(--text-color);
  font-size: 1.2rem;
  cursor: pointer;
  padding: 0.5rem;
  transition: color 0.3s;
}

.search-toggle:hover,
.theme-toggle:hover,
.menu-toggle:hover {
  color: var(--primary-color);
}

.search-container {
  display: none;
  padding: 1rem 0;
  background-color: var(--background-color);
  border-top: 1px solid var(--border-color);
  transition: background-color 0.3s;
}

.search-container.active {
  display: block;
}

.search-form {
  display: flex;
  max-width: 600px;
  margin: 0 auto;
}

.search-form input {
  flex-grow: 1;
  padding: 0.8rem;
  border: 1px solid var(--border-color);
  border-right: none;
  border-radius: 4px 0 0 4px;
  font-size: 1rem;
  background-color: var(--background-color);
  color: var(--text-color);
  transition: border-color 0.3s, background-color 0.3s, color 0.3s;
}

.search-form input:focus {
  outline: none;
  border-color: var(--primary-color);
}

.search-form button {
  padding: 0 1rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 0 4px 4px 0;
  cursor: pointer;
  transition: background-color 0.3s;
}

.search-form button:hover {
  background-color: var(--primary-dark);
}

/* Hero section */
.hero {
  padding: 4rem 0;
  background-color: var(--light-gray);
  text-align: center;
  margin-bottom: 3rem;
}

.hero h1 {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.hero p {
  font-size: 1.5rem;
  margin-bottom: 2rem;
  color: var(--secondary-color);
}

.hero-search {
  max-width: 700px;
  margin: 0 auto;
}

.search-form-large {
  display: flex;
  background-color: var(--background-color);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.search-form-large input {
  flex-grow: 1;
  padding: 1rem;
  border: none;
  font-size: 1.1rem;
  background-color: var(--background-color);
  color: var(--text-color);
}

.search-form-large input:focus {
  outline: none;
}

.search-form-large button {
  padding: 1rem 2rem;
  background-color: var(--primary-color);
  color: white;
  border: none;
  font-size: 1.1rem;
  cursor: pointer;
  transition: background-color 0.3s;
}

.search-form-large button:hover {
  background-color: var(--primary-dark);
}

/* Breadcrumbs */
.breadcrumbs {
  margin-bottom: 2rem;
  color: var(--secondary-color);
}

.breadcrumbs a {
  color: var(--secondary-color);
}

.breadcrumbs a:hover {
  color: var(--primary-color);
}

/* Category cards */
.category-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  margin-bottom: 3rem;
}

.category-card {
  display: flex;
  flex-direction: column;
  background-color: var(--background-color);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.category-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
}

.category-icon {
  padding: 2rem;
  font-size: 3rem;
  text-align: center;
  background-color: var(--primary-color);
  color: white;
}

.category-content {
  padding: 1.5rem;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.category-title {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.category-description {
  margin-bottom: 1.5rem;
  flex-grow: 1;
}

.btn-view {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  background-color: var(--primary-color);
  color: white;
  border-radius: 4px;
  font-weight: 500;
  text-align: center;
  transition: background-color 0.3s;
}

.btn-view:hover {
  background-color: var(--primary-dark);
  color: white;
}

/* Subject cards */
.subject-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  margin-bottom: 2rem;
}

.subject-card {
  background-color: var(--background-color);
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
  display: flex;
  flex-direction: column;
}

.subject-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
}

.subject-title {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.subject-description {
  margin-bottom: 1.5rem;
  flex-grow: 1;
}

.subject-meta {
  margin-bottom: 1.5rem;
  color: var(--secondary-color);
  font-size: 0.9rem;
}

.subject-category {
  margin-right: 1rem;
}

/* PDF cards */
.pdf-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 2rem;
}

.pdf-card {
  display: flex;
  background-color: var(--background-color);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.pdf-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
}

.pdf-icon {
  padding: 2rem;
  font-size: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--primary-color);
  color: white;
  min-width: 80px;
}

.pdf-content {
  padding: 1.5rem;
  flex-grow: 1;
}

.pdf-title {
  font-size: 1.2rem;
  margin-bottom: 1rem;
}

.pdf-meta {
  margin-bottom: 1.5rem;
  color: var(--secondary-color);
  font-size: 0.9rem;
}

.pdf-pages {
  margin-right: 1rem;
}

.pdf-actions {
  display: flex;
  gap: 1rem;
}

.btn-download {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  background-color: transparent;
  color: var(--primary-color);
  border: 1px solid var(--primary-color);
  border-radius: 4px;
  font-weight: 500;
  text-align: center;
  transition: background-color 0.3s, color 0.3s;
}

.btn-download:hover {
  background-color: var(--primary-color);
  color: white;
}

/* PDF List */
.pdf-list {
  margin-bottom: 3rem;
}

.pdf-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  background-color: var(--background-color);
  border-radius: 8px;
  margin-bottom: 1rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.pdf-item:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.pdf-info {
  flex-grow: 1;
}

.pdf-info h2 {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
}

.pdf-info .pdf-meta {
  margin-bottom: 0;
}

.pdf-actions {
  display: flex;
  gap: 1rem;
  flex-shrink: 0;
}

/* PDF Viewer */
.pdf-viewer-header {
  margin-bottom: 2rem;
}

.pdf-title {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.pdf-meta {
  margin-bottom: 1.5rem;
  color: var(--secondary-color);
}

.pdf-meta span {
  margin-right: 1.5rem;
}

.pdf-actions-bar {
  display: flex;
  gap: 1rem;
  margin-bottom: 2rem;
}

.btn-fullscreen,
.btn-print {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  background-color: transparent;
  color: var(--text-color);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-weight: 500;
  text-align: center;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s, border-color 0.3s;
}

.btn-fullscreen:hover,
.btn-print:hover {
  background-color: var(--light-gray);
  border-color: var(--secondary-color);
}

.pdf-viewer-container {
  margin-bottom: 2rem;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  background-color: var(--background-color);
  transition: background-color 0.3s;
}

.pdf-iframe {
  display: block;
  width: 100%;
  height: 800px;
  border: none;
}

.pdf-navigation {
  display: flex;
  justify-content: space-between;
  margin-bottom: 3rem;
}

.nav-prev,
.nav-next {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.8rem 1.5rem;
  background-color: var(--light-gray);
  color: var(--text-color);
  border-radius: 4px;
  transition: background-color 0.3s, color 0.3s;
}

.nav-prev:hover,
.nav-next:hover {
  background-color: var(--primary-color);
  color: white;
}

/* Filter buttons */
.subject-filter {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 2rem;
}

.filter-btn {
  padding: 0.5rem 1rem;
  background-color: var(--light-gray);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

.filter-btn:hover,
.filter-btn.active {
  background-color: var(--primary-color);
  color: white;
}

/* Section footer */
.section-footer {
  text-align: center;
  margin-top: 2rem;
}

.btn-primary {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  background-color: var(--primary-color);
  color: white;
  border-radius: 4px;
  font-weight: 500;
  text-align: center;
  transition: background-color 0.3s;
}

.btn-primary:hover {
  background-color: var(--primary-dark);
  color: white;
}

.btn-secondary {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  background-color: transparent;
  color: var(--primary-color);
  border: 1px solid var(--primary-color);
  border-radius: 4px;
  font-weight: 500;
  text-align: center;
  transition: background-color 0.3s, color 0.3s;
}

.btn-secondary:hover {
  background-color: var(--primary-color);
  color: white;
}

/* About page */
.about-container {
  max-width: 800px;
  margin: 0 auto;
}

.about-header {
  text-align: center;
  margin-bottom: 3rem;
}

.about-tagline {
  font-size: 1.5rem;
  color: var(--secondary-color);
}

.about-content h2 {
  font-size: 1.8rem;
  margin: 2rem 0 1rem;
}

.about-content p {
  margin-bottom: 1.5rem;
}

.about-content ul,
.about-content ol {
  margin-bottom: 1.5rem;
  padding-left: 1.5rem;
}

.about-content li {
  margin-bottom: 0.5rem;
}

.about-cta {
  display: flex;
  gap: 1rem;
  margin-top: 3rem;
  justify-content: center;
}

/* Search results */
.search-results-container {
  max-width: 800px;
  margin: 0 auto;
}

.search-header {
  margin-bottom: 2rem;
}

.search-info {
  margin-bottom: 1.5rem;
  color: var(--secondary-color);
}

.search-results {
  margin-top: 2rem;
}

.search-result {
  padding: 1.5rem;
  margin-bottom: 1rem;
  background-color: var(--background-color);
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s, box-shadow 0.3s;
}

.search-result:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
}

.search-result h3 {
  margin-bottom: 0.5rem;
}

.search-result p {
  color: var(--secondary-color);
}

.loading {
  text-align: center;
  padding: 2rem;
  color: var(--secondary-color);
}

.loading i {
  margin-right: 0.5rem;
}

/* Footer */
.site-footer {
  background-color: var(--light-gray);
  padding: 3rem 0;
  margin-top: 3rem;
  transition: background-color 0.3s;
}

.footer-content {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-bottom: 2rem;
}

.footer-left {
  flex-basis: 300px;
  flex-grow: 1;
  margin-right: 2rem;
}

.footer-left h2 {
  margin-bottom: 1rem;
}

.footer-left p {
  color: var(--secondary-color);
}

.footer-right {
  flex-grow: 1;
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
}

.footer-links {
  min-width: 200px;
}

.footer-links h3 {
  margin-bottom: 1.2rem;
  font-size: 1.2rem;
}

.footer-links ul {
  list-style-type: none;
}

.footer-links li {
  margin-bottom: 0.8rem;
}

.footer-bottom {
  text-align: center;
  padding-top: 2rem;
  border-top: 1px solid var(--border-color);
  color: var(--secondary-color);
}

/* Responsive design */
@media (max-width: 992px) {
  .category-grid,
  .subject-grid,
  .pdf-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 768px) {
  .site-header .container {
    flex-wrap: wrap;
  }
  
  .site-nav {
    display: none;
    width: 100%;
    flex-direction: column;
    padding-top: 1rem;
    margin-top: 1rem;
    border-top: 1px solid var(--border-color);
  }
  
  .site-nav.active {
    display: flex;
  }
  
  .menu-toggle {
    display: block;
  }
  
  .hero h1 {
    font-size: 2.5rem;
  }
  
  .hero p {
    font-size: 1.2rem;
  }
  
  .category-grid,
  .subject-grid,
  .pdf-grid {
    grid-template-columns: 1fr;
  }
  
  .pdf-item {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .pdf-info {
    margin-bottom: 1rem;
  }
  
  .search-form-large {
    flex-direction: column;
  }
  
  .search-form-large input {
    width: 100%;
    border-bottom: 1px solid var(--border-color);
  }
  
  .footer-content {
    flex-direction: column;
  }
  
  .footer-left {
    margin-right: 0;
    margin-bottom: 2rem;
  }
}".